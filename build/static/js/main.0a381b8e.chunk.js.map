{"version":3,"sources":["components/Header.js","components/TodoForm.js","components/useInputState.js","components/TodoList.js","App.js","components/useTodoState.js","reportWebVitals.js","index.js"],"names":["Header","useStyles","makeStyles","theme","margin","spacing","TodoForm","saveTodo","useState","value","setValue","onChange","event","target","reset","useInputState","classes","onSubmit","preventDefault","TextField","variant","placeholder","Button","type","size","color","className","marginRight","TodoList","todos","deleteTodo","List","map","todo","index","ListItem","dense","button","ListItemText","primary","ListItemSecondaryAction","IconButton","aria-label","onClick","toString","App","initialValue","setTodos","addTodo","todoText","todoIndex","newTodos","filter","_","useTodoState","console","log","trimmedText","trim","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAQeA,EAPA,WACb,OACE,iCACE,+C,mCCEAC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNA,OAAQD,EAAME,QAAQ,QAsCXC,EAlCE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,ECVa,WACb,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,MAAO,CACLD,QACAE,SAAU,SAACC,GACTF,EAASE,EAAMC,OAAOJ,QAExBK,MAAO,kBAAMJ,EAAS,MDEWK,GAA3BN,EAAR,EAAQA,MAAOK,EAAf,EAAeA,MAAOH,EAAtB,EAAsBA,SAEhBK,EAAUf,IAEhB,OACE,uBACEgB,SAAU,SAACL,GACTA,EAAMM,iBAENX,EAASE,GACTK,KALJ,UAQE,cAACK,EAAA,EAAD,CACEC,QAAQ,WACRC,YAAY,gBACZjB,OAAO,QACPO,SAAUA,EACVF,MAAOA,IAET,cAACa,EAAA,EAAD,CACEC,KAAK,SACLH,QAAQ,YACRI,KAAK,SACLC,MAAM,UACNC,UAAWV,EAAQZ,OALrB,wB,8DExBAH,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCwB,YAAa,CAEXA,YAAaxB,EAAME,QAAQ,QAiChBuB,EA7BE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WACnBd,EAAUf,IAEhB,OACE,cAAC8B,EAAA,EAAD,UACGF,EAAMG,KAAI,SAACC,EAAMC,GAAP,OACT,eAACC,EAAA,EAAD,CAEEC,OAAK,EACLC,QAAM,EACNX,UAAWV,EAAQW,YAJrB,UAME,cAACW,EAAA,EAAD,CAAcC,QAASN,IACvB,cAACO,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,aAAW,SACXC,QAAS,WACPb,EAAWI,IAHf,SAME,cAAC,IAAD,UAbCA,EAAMU,kB,cCGNC,MAnBf,WACE,MCLa,SAACC,GACd,MAA0BtC,mBAASsC,GAAnC,mBAAOjB,EAAP,KAAckB,EAAd,KAEA,MAAO,CACLlB,QACAmB,QAAS,SAACC,GACRF,EAAS,GAAD,mBAAKlB,GAAL,CAAYoB,MAEtBnB,WAAY,SAACoB,GACX,IAAMC,EAAWtB,EAAMuB,QAAO,SAACC,EAAGnB,GAAJ,OAAcA,IAAUgB,KAEtDH,EAASI,KDN0BG,CAAa,CAAC,UAAW,UAAxDzB,EAAR,EAAQA,MAAOmB,EAAf,EAAeA,QAASlB,EAAxB,EAAwBA,WAExB,OADAyB,QAAQC,IAAI3B,GAEV,sBAAKH,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEnB,SAAU,SAAC0C,GACT,IAAMQ,EAAcR,EAASS,OACzBD,EAAYE,OAAS,GACvBX,EAAQS,MAId,cAAC,EAAD,CAAU5B,MAAOA,EAAOC,WAAYA,QET3B8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0a381b8e.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <h1>To do List</h1>\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport useInputState from \"./useInputState\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst TodoForm = ({ saveTodo }) => {\r\n  const { value, reset, onChange } = useInputState();\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(event) => {\r\n        event.preventDefault();\r\n\r\n        saveTodo(value);\r\n        reset();\r\n      }}\r\n    >\r\n      <TextField\r\n        variant=\"outlined\"\r\n        placeholder=\"Add Todo List\"\r\n        margin=\"dense\"\r\n        onChange={onChange}\r\n        value={value}\r\n      />\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        size=\"medium\"\r\n        color=\"primary\"\r\n        className={classes.margin}\r\n      >\r\n        Submit\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { useState } from \"react\";\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  return {\r\n    value,\r\n    onChange: (event) => {\r\n      setValue(event.target.value);\r\n    },\r\n    reset: () => setValue(\"\"),\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  marginRight: {\r\n    // margin: theme.spacing(1),\r\n    marginRight: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst TodoList = ({ todos, deleteTodo }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List>\r\n      {todos.map((todo, index) => (\r\n        <ListItem\r\n          key={index.toString()}\r\n          dense\r\n          button\r\n          className={classes.marginRight}\r\n        >\r\n          <ListItemText primary={todo} />\r\n          <ListItemSecondaryAction>\r\n            <IconButton\r\n              aria-label=\"Delete\"\r\n              onClick={() => {\r\n                deleteTodo(index);\r\n              }}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport Headers from \"./components/Header\";\r\nimport TodoForm from \"./components/TodoForm\";\r\nimport ToDoList from \"./components/TodoList\";\r\nimport useTodoState from \"./components/useTodoState\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const { todos, addTodo, deleteTodo } = useTodoState([\"ReactJs\", \"VueJS\"]);\r\n  console.log(todos);\r\n  return (\r\n    <div className=\"App\">\r\n      <Headers />\r\n      <TodoForm\r\n        saveTodo={(todoText) => {\r\n          const trimmedText = todoText.trim();\r\n          if (trimmedText.length > 0) {\r\n            addTodo(trimmedText);\r\n          }\r\n        }}\r\n      />\r\n      <ToDoList todos={todos} deleteTodo={deleteTodo} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState } from \"react\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (initialValue) => {\r\n  const [todos, setTodos] = useState(initialValue);\r\n\r\n  return {\r\n    todos,\r\n    addTodo: (todoText) => {\r\n      setTodos([...todos, todoText]);\r\n    },\r\n    deleteTodo: (todoIndex) => {\r\n      const newTodos = todos.filter((_, index) => index !== todoIndex);\r\n\r\n      setTodos(newTodos);\r\n    },\r\n  };\r\n};\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}